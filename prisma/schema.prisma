generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model brands {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(255)
  label        String?        @db.VarChar(5)
  created_at   DateTime?      @default(now()) @db.Timestamp(6)
  updated_at   DateTime?      @default(now()) @db.Timestamp(6)
  store_brands store_brands[]
}

model locations {
  id          Int       @id @default(autoincrement())
  street      String    @db.VarChar(255)
  number      String    @db.VarChar(50)
  postal_code String    @db.VarChar(20)
  city        String    @db.VarChar(100)
  country     String    @db.VarChar(100)
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  updated_at  DateTime? @default(now()) @db.Timestamp(6)
  stores      stores[]
}

model store_brands {
  store_id   Int
  brand_id   Int
  created_at DateTime? @default(now()) @db.Timestamp(6)
  brands     brands    @relation(fields: [brand_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  stores     stores    @relation(fields: [store_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([store_id, brand_id])
}

model stores {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(255)
  description  String?
  location_id  Int
  created_at   DateTime?      @default(now()) @db.Timestamp(6)
  updated_at   DateTime?      @default(now()) @db.Timestamp(6)
  store_brands store_brands[]
  locations    locations      @relation(fields: [location_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model GeneratedDescription {
  id          Int       @id @default(autoincrement())
  description String
  created_at  DateTime? @default(now()) @db.Timestamp(6)
}
