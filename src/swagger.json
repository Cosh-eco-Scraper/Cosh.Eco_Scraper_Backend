{
  "swagger": "2.0",
  "info": {
    "title": "Cosh scraper API",
    "description": "This will display all api calls to the cosh scraper backend",
    "version": "1.0.0"
  },
  "host": "localhost:3001",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "paths": {
    "/stores": {
      "get": {
        "tags": [
          "stores"
        ],
        "summary": "Returns all stores",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/stores/{id}": {
      "get": {
        "tags": [
          "stores"
        ],
        "summary": "Returns a single store by ID",
        "description": "Retrieves detailed information about a specific store.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "ID of the store to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Store found and returned",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": "1"
                },
                "name": {
                  "type": "string",
                  "example": "a beautiful store"
                },
                "description": {
                  "type": "string",
                  "example": "description of the store"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Store not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "tags": [
          "stores"
        ],
        "summary": "Update a store by ID",
        "description": "Updates the details of a store specified by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the store to update",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Store update payload",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Updated Store Name"
                },
                "description": {
                  "type": "string",
                  "example": "Updated description"
                },
                "location_id": {
                  "type": "integer",
                  "example": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Store updated successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "location_id": {
                  "type": "integer"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "404": {
            "description": "Store not found."
          },
          "400": {
            "description": "Invalid input."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/stores/{id}/openingshours": {
      "get": {
        "tags": [
          "stores"
        ],
        "summary": "Returns all opening hours for a single store by ID",
        "description": "Retrieves opening hours for a specific store.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "ID of the store to return"
          }
        ],
        "responses": {
          "200": {
            "description": "Store found and returned",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": "1"
                },
                "day": {
                  "type": "string",
                  "example": "monday"
                },
                "opening": {
                  "type": "string",
                  "example": "09:00h"
                },
                "closing": {
                  "type": "string",
                  "example": "17:30h"
                },
                "storeId": {
                  "type": "number",
                  "example": "1"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Store not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/stores/{id}/brands": {
      "get": {
        "tags": [
          "stores"
        ],
        "summary": "Returns all brands for a single store by ID",
        "description": "Retrieves brands for a specific store.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "description": "ID of the store to return"
          }
        ],
        "responses": {
          "200": {
            "description": "brand found and returned",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": "1"
                },
                "name": {
                  "type": "string",
                  "example": "Jack & Jones"
                }
              }
            }
          },
          "204": {
            "description": "No brands found"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Store not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/llm": {
      "post": {
        "tags": [
          "llm"
        ],
        "summary": "Send a prompt to the LLM and get a response.",
        "description": "Sends a prompt string to the LLM and returns the generated response.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Prompt payload",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "prompt": {
                  "type": "string",
                  "example": "Hello, AI!"
                }
              },
              "required": [
                "prompt"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response from LLM.",
            "schema": {
              "type": "object",
              "properties": {
                "response": {
                  "type": "string",
                  "example": "Hello, human!"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/brands/{brandId}": {
      "put": {
        "tags": [
          "brand"
        ],
        "summary": "Update a brand by ID",
        "description": "Updates the details of a brand specified by brandId.",
        "parameters": [
          {
            "name": "brandId",
            "in": "path",
            "description": "ID of the brand to update",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Brand update payload",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "BrandName"
                },
                "label": {
                  "type": "string",
                  "example": "BR"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Brand updated successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "label": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "404": {
            "description": "Brand not found."
          },
          "400": {
            "description": "Invalid input."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    }
  }
}
